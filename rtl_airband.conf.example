# Sample RTLSDR_Airband configuration file with a brief syntax explanation
#
# General libconfig format description can be found in libconfig manual
# (http://www.hyperrealm.com/libconfig/libconfig_manual.html)

# Each parameter is specified as:
#
#   key = value;
#
# Remember about the semicolon at the end.
#
# Keys can be scalars:
#
#   myinteger = 5;
#   myfloat = -3.5;
#   mystring = "This is a string";
#
# or lists (ordered):
#
#   mylist = (5, 8, 3, "string");
#
# Parameters can be grouped, like so:
#
#   mygroup = {
#     param1 = 3;
#     param2 = -5;
#     param3 = "some text";
#   };
#
# Parameter names inside the group must be unique.
# Lists and groups can contain scalars as well as groups or lists.
#
# Three types of comments are allowed within a configuration:
#
# - Script-style comments (beginning with a '#' character)
# - C-style comments, /* like so */
# - C++-style comments (beginning with // sequence)

# global parameters

# log messages via syslog? Default: 1 (yes)
# if disabled, log messages are written to stdout (but only when run in foreground)
# This option has no effect on Windows
# syslog = 1

# PID file path (default: /run/rtl_airband.pid)
# This setting has no effect on Windows.
# pidfile = "/run/rtl_airband.pid"

# De-emphasis filter time constant
# The filter suppresses high-frequency noise in NFM channels.
# Larger values cause more noise suppression.
# Set it to 0 if you don't want filtering.
# Default value: 200 (microseconds).
# You can also set this parameter per dongle and / or per channel.
# tau = 200;

# Number of USB read buffers to be used per dongle
# The default value is 10. If you use four or more dongles simultaneously
# or you get error messages like "Failed to submit transfer 12!"
# you may need to lower this value
# rtlsdr_buffers = 10;

# devices section contains all settings related to the RTLSDR receivers.
#
# It's a list of groups - each group contains settings for a single receiver,
# ie.: devices = ( {dongle1 params}, {dongle2 params}, {dongle3 params} );

devices = (
  {
# Device index (as identified by librtlsdr library)
    index = 0;
# A quick way to ignore this device temporarily. Default: false
    disable = false;
# Gain (integer, in decibels, optional). Default is auto-gain.
#    gain = 28;
# Dongle mode. Can be one of the following:
# - "multichannel" - this is the default. Dongle is set to the configured
#   center frequency. Multiple channels are received simultaneously. Every
#   channel is a separate Icecast stream.
# - "scan" - turns the dongle into a frequency scanner. All scanned frequencies
#   are sent to a common Icecast stream.
    mode = "multichannel";
# Center frequency (in hertz). Valid only in multichannel mode.
    centerfreq = 120100000;
# Tuning error (in parts per million). Default is 0.
    correction = 80;
# List of channels which should be received and streamed from this dongle.
# It's a list of groups - each group contains settings for a single channel.
# Maximum number of channels per dongle is 8 in multichannel mode or 1 in scan
# mode.
    channels = (
      {
# Channel frequency (in hertz)
# The channel must fit in the dongle bandwidth, which is approximately 2.5 MHz
# (ie. +- 1.25 MHz around center frequency)
# This setting is valid in multichannel mode only.
        freq = 118925000;
# A quick way to ignore this channel temporarily. Default: false
        disable = false;
# Modulation - "am" or "nfm". Default is "am".
	modulation = "am";
# Squelch level (integer, greater than 0). Default is auto.
# Set this parameter only when auto squelch does not work correctly
# (this is common with channels which transmit continuously, like ATIS/AWOS,
# when auto squelch is unable to figure out the correct noise floor level)
#	squelch = 100;
#Automatioc Frequency Control (AFC) level (optional value)
#0 - disabled (by default)
#value from range 1...10 - AFC enabled, larger value means more aggressive AFC.
        afc = 0;
# Multiple outputs per channel are supported. For example, a single channel
# can be sent to multiple Shoutcast servers.
        outputs = (
	  {
# A quick way to ignore this output temporarily. Default: false
            disable = false;
# Output type. Supported types are: icecast and file.
            type = "icecast";
# Host name or IP address of Shoutcast/Icecast server
            server = "www.example.com";
# Shoutcast port number
            port = 8000;
# Shoutcast mountpoint path (without leading slash)
            mountpoint = "118925.mp3";
# Username and password for the mountpoint
            username = "source";
            password = "password";
# optional: name of the stream (default: none)
            name = "Example ATC feed";
# optional: genre (default: none)
            genre = "ATC";
	  }
	);
      },
# Subsequent channels
      {
        freq = 119100000;
# You can use both AM and NFM modulations for different channels on the same dongle.
# Probably not very useful in multichannel mode, but it's possible.
	modulation = "nfm";
# This channel is streamed to two destinations
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "119100.mp3";
            username = "source";
            password = "password";
	  },
	  {
            type = "icecast";
            server = "www.otherserver.com";
            port = 8010;
            mountpoint = "119100.mp3";
            username = "someuser";
            password = "somepassword";
	  }
	);
      },
      {
        freq = 119500000;
	modulation = "am";
# This channel is streamed to Icecast and saved to local files
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "119500.mp3";
            username = "source";
            password = "password";
	  },
          {
            type = "file";
# Directory where output MP3 files are written. Must be created before running rtl_airband.
            directory = "/home/pi";
# File name prefix. rtl_airband automatically appends the date and UTC hour in YYYYmmdd_HH format
# and creates new file every hour.
            filename_template = "119500";
# Set this to true if you want to record continuously.
# Set this to false if you want to skip silence (record only when squelch is open).
# Default is false.
            continuous = true;
# Set this to true if you want to append to file if its exists with demarkation of missing fragment.
# Set this to false if you want to overwrite existing files.
# Default is true.
            append = false;
# Set this to true if you want you file names to be created with localtime vs GMT timestamps
# Set this to false if you want you file names to be created with GMT timestamps
            localtime = false;
          }
	);
      },
      {
        freq = 120600000;
# Manual squelch setting for this channel
	squelch = 250;
	modulation = "am";
# This channel is not streamed to Icecast.
# It is saved to local files into two destinations - one of them records continuously, the other one
# skips silence periods.
        outputs = (
          {
            type = "file";
            directory = "/home/pi/streams";
            filename_template = "TWR";
            continuous = false;
          },
          {
            type = "file";
            directory = "/home/pi/streams_full";
            filename_template = "TWR";
            continuous = true;
          }
	);
      },
      {
# This channel will be ignored.
# This way you can quickly disable a channel without commenting out or deleting
# large sections of config file
	disable = true;
        freq = 121300000;
	modulation = "am";
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "121300.mp3";
            username = "source";
            password = "password";
	  }
	);
      },
      {
        freq = 121600000;
	modulation = "am";
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "121600.mp3";
            username = "source";
            password = "password";
	  }
	);
      } );
  },
# Receiver 1 - multichannel mode, 4 NFM channels
  {
    index = 1;
    gain = 28;
    mode = "multichannel";
    centerfreq = 123000000;
    correction = 80;
# De-emphasis filter time constant
# This setting overrides the global tau setting for all channels on this dongle
    tau = 0;
    channels = (
      {
        freq = 152000000;
	modulation = "nfm";
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "152000.mp3";
            username = "source";
            password = "password";
	  }
	);
      },
      {
        freq = 152100000;
	modulation = "nfm";
# De-emphasis filter time constant
# Applies to this channel only
	tau = 500;
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "152100.mp3";
            username = "source";
            password = "password";
	  }
	);
      },
      {
        freq = 152200000;
	modulation = "nfm";
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "152200.mp3";
            username = "source";
            password = "password";
	  }
	);
      },
      {
        freq = 152300000;
	modulation = "nfm";
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "152300.mp3";
            username = "source";
            password = "password";
	  },
          {
# This output will be ignored.
# This way you can quickly disable an output without deleting or commenting it out
	    disabled = true;
            type = "file";
            directory = "/home/pi/streams";
            filename_template = "152300";
          }
	);
      } );
  },
# Receiver 2 - scan mode, AM modulation (default)
  {
    index = 2;
    gain = 28;
    mode = "scan";
    correction = 80;
    channels = (
      {
        freqs = ( 126300000, 121500000, 128225000, 131375000 );
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "variouschannels.mp3";
            username = "source";
            password = "password";
            name = "Example scan mode feed";
            genre = "ATC";
	  }
	);
      }
    );
  },
  {
# This device will be ignored.
# This way you can quickly disable a device without deleting or commenting it out
    index = 3;
    gain = 28;
    mode = "scan";
    correction = 80;
    channels = (
      {
        freqs = ( 126300000, 121500000 );
        outputs = (
	  {
            type = "icecast";
            server = "www.example.com";
            port = 8000;
            mountpoint = "test.mp3";
            username = "source";
            password = "password";
	  }
	);
      }
    );
  }
);
